* Identifying strands in ratio-ratio space
** Steps to mapping strands into real space
+ Multiple strands apparent in ratio-ratio plots
+ Plan to plot these in real celestial space.

Steps are as follows: 

1. First save fits files of the 2d histogram

2. Second. Use ds9 to put some points along each strand. Save them to a region file.

   - (2 bis) Put the curves on using Graphics.app so we can make sure they are continuous

3. Third. Fit a curve to each strand. We could use a quadratic, or we could use the mixing curve between two pure states. *Would it be better to do it in linear space?*

4. Fourth. For each strand and for each point in ratio–ratio space, find the closest distance r from the line.

5. Fifth. Use this distance s to create an "affinity" function. For instance a Gaussian: exp(–r^2 / w^2), where w is the desired width of the thread.

6. Sixth. Use this affinity as an alpha channel to pick out the thread in celestial coordinate space. We could also calculate the longitudinal distance s along the thread.

*** Mixing línes

If we have two pure states x1, y1 and x2, y2 that we mix together with fraction f. Then we have x = f x1 + (1 - f) x2 and similar for y.

(x - x2) / (x1 - x2) = (y - y2) / (y1 - y2)

So this will be a straight line in linear-linear space.



* Other things to do 

** Bin the maps
+ The [N II]/Ha and [O III]/Hb ratios have very little noise, but the other ratios do
+ They would benefit by a small amount of binning
  + Even 4x4 makes a big difference to the density and temperature diagnostic ratios
  + We can't bin too much, or we will lose the ability to see the strands

** Dimensional reduction
+ We have lots of ratios, and the 3d visualizations show that a plane would fit them quite well
+ We could try using PCA or ICA to find the most important eigenvectors
  + [[http://gael-varoquaux.info/science/ica_vs_pca.html][Blog post by Gael Varoquaux that explains difference between PCA and ICA]]
  + [[http://scikit-learn.org/stable/auto_examples/decomposition/plot_ica_vs_pca.html#sphx-glr-auto-examples-decomposition-plot-ica-vs-pca-py][Example using scikit-learn]]
+ Binning is probably important for this
+ We can also consider doing Box-Cox transformation to make the distributions more Gaussian
  + See [[http://scikit-learn.org/stable/modules/preprocessing.html#preprocessing-transformer][discussion in scikit-learn docs]]
  + But maybe that is eliminating too much real info
* Two dimensional histograms of [N II]/Ha vs [O III]/Hb

#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6583-6563.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-6563.fits')[0]

  x = np.log10(hdu1.data.ravel())
  y = np.log10(hdu2.data.ravel())

  xyrange = [-1.2, -0.2], [-0.8, 0.2]
  ax.hist2d(x, y, bins=[500, 500], range=xyrange, norm=PowerNorm(0.5))

  ax.set(
      xlabel=r'$\log_{10} [\mathrm{N II}]\ \lambda 6568/ \mathrm{H}\alpha$',
      ylabel=r'$\log_{10} [\mathrm{O III}]\ \lambda 5007] / \mathrm{H}\alpha$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-hist2d-muse.pdf]]

#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  from astropy.wcs import WCS
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-hb-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6583-6563.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-6563.fits')[0]
  hdu3 = fits.open('../Ratios-for-Alba/ratio-4861-6563.fits')[0]
  x = np.log10(hdu1.data.ravel())
  y = np.log10(hdu2.data.ravel() / hdu3.data.ravel())

  xyrange = [-1.2, -0.2], [-0.8 + 0.5, 0.2 + 0.5]
  counts, xedges, yedges, _ = ax.hist2d(x, y,
                                        bins=[200, 200], range=xyrange,
                                        norm=PowerNorm(0.5), cmap='viridis')
  w = WCS(naxis=2)
  w.wcs.crpix = 0.5, 0.5
  w.wcs.crval = xedges[0], yedges[0]
  w.wcs.cdelt = np.diff(xedges)[0], np.diff(yedges)[0]
  w.wcs.ctype = 'linear', 'linear'
  fits.PrimaryHDU(header=w.to_header(),
                  data=counts.T).writeto(figfile.replace('.pdf', '.fits'),
                                         clobber=True)


  ax.grid(alpha=0.3)
  ax.set(
      xlabel=r'$\log_{10} [\mathrm{N II}]\ \lambda 6568/ \mathrm{H}\alpha$',
      ylabel=r'$\log_{10} [\mathrm{O III}]\ \lambda 5007 / \mathrm{H}\beta$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-hb-hist2d-muse.pdf]]

Do a linear version

#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-hb-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6583-6563.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-6563.fits')[0]
  hdu3 = fits.open('../Ratios-for-Alba/ratio-4861-6563.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() / hdu3.data.ravel()

  xyrange = [0.0, 0.7], [0.0, 5.0]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{N II}]\ \lambda 6583 / \mathrm{H}\alpha $',
      ylabel=r'$[\mathrm{O III}]\ \lambda 5007 / \mathrm{H}\beta$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-hb-linear-hist2d-muse.pdf]]

Make some ratios

#+BEGIN_SRC python :results output verbatim
  from astropy.io import fits
  import numpy as np
  hdu1 = fits.open('../Ratios-for-Alba/ratio-5007-6563.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-4861-6563.fits')[0]

  hdu1.data /= hdu2.data
  hdu1.writeto('../Ratios-for-Alba/ratio-5007-4861.fits', clobber=True)

  hdu1.data = np.log10(hdu1.data)
  hdu1.writeto('../Ratios-for-Alba/log10-ratio-5007-4861.fits', clobber=True)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6583-6563.fits')[0]
  hdu1.data = np.log10(hdu1.data)
  hdu1.writeto('../Ratios-for-Alba/log10-ratio-6583-6563.fits', clobber=True)
#+END_SRC

#+RESULTS:


** Add further ratios


*** Try using [O II]/[N II] as a 3rd dimension
+ Plan is to make a cube, so these will be projections into the other 2 faces
+ It is harder to see strands in the graphs that include [O II]/[N II]
+ [[file:three-d-oii-nii.pdf]] show the three principal projections of the parameter cube
+ In jupyter notebook we do 3d visualization, which is sorta useful
  + [[file:Ratios%20in%203d%20with%20ipyvolume.ipynb]]
  + [[file:Ratios%20in%203d%20with%20ipyvolume.py]]
+ Might be better using yt
  + http://yt-project.org
**** [O II]/[N II] vs [N II]/Ha
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-o2n2-n2ha-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6583-6563.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-7330-6583.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 0.7], [0.0, 0.23]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xticks=[0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6],
      xlabel=r'$[\mathrm{N II}]\ \lambda 6583 / \mathrm{H}\alpha $',
      ylabel=r'$[\mathrm{O II}]\ \lambda 7330 / [\mathrm{N II}]\ \lambda 6583 $',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-o2n2-n2ha-linear-hist2d-muse.pdf]]
**** [O III]/Hb vs [O II]/[N II]
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-o3hb-o2n2-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-7330-6583.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-4861.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 0.23], [0.0, 5.0]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{O II}]\ \lambda 7330 / [\mathrm{N II}]\ \lambda 6583 $',
      ylabel=r'$[\mathrm{O III}]\ \lambda 5007 / \mathrm{H}\beta $',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-o3hb-o2n2-linear-hist2d-muse.pdf]]

*** Try with density as third parameter instead
+ [[file:three-d-sii-den.pdf]] 
**** [S II] 6731/6716 vs [N II]/Ha
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-s2den-n2ha-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6583-6563.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-6716-6731.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 0.7], [0.0, 1.7]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{N II}]\ \lambda 6568 / \mathrm{H}\alpha $',
      ylabel=r'$[\mathrm{S II}]\ \lambda 6716 / 6731$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-s2den-n2ha-linear-hist2d-muse.pdf]]

**** [O III]/Hb vs [S II] 6731/6716
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-o3hb-s2den-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6716-6731.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-4861.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 1.7], [0.0, 5.0]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{S II}]\ \lambda 6716 / 6731$',
      ylabel=r'$[\mathrm{O III}]\ \lambda 5007 / \mathrm{H}\beta $',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-o3hb-s2den-linear-hist2d-muse.pdf]]

*** Try [S III]/[S II] as third parameter instead
**** [S III]/[S II] vs [N II]/Ha
+ This looks pretty good actually
+ [[file:three-d-siii-sii.pdf]] shows
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-s2s2-n2ha-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-6583-6563.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-9069-6731.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 0.7], [0.0, 30]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{N II}]\ \lambda 6568 / \mathrm{H}\alpha $',
      ylabel=r'$[\mathrm{S III}]\ \lambda 9069 / [\mathrm{S III}]\ \lambda 6731$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-s2s2-n2ha-linear-hist2d-muse.pdf]]

**** [O III]/Hb versus [S III]/[S II]
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-o3-hb-s2s2-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-9069-6731.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-4861.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 30], [0.0, 5.0]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{S III}]\ \lambda 9069 / [\mathrm{S III}]\ \lambda 6731$',
      ylabel=r'$[\mathrm{O III}]\ \lambda 5007 / \mathrm{H}\beta $',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-o3-hb-s2s2-linear-hist2d-muse.pdf]]


*** Other combinations


**** [O III]/[O II] vs [O II]/[O I]
This is just too noisy.  Might be OK with binning

#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-o3o2-o2o1-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-7330-6300.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-7318.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 30], [0.0, 130]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{O II}]\ \lambda 7330 / [\mathrm{O I}] 6300$',
      ylabel=r'$[\mathrm{O III}]\ \lambda 5007 / [\mathrm{O II}]\ \lambda 7318$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-o3o2-o2o1-linear-hist2d-muse.pdf]]


**** [O III]/[O II] vs [S III]/[S II]
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-o3o2-s3s2-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-9069-6731.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-7318.fits')[0]
  x = hdu1.data.ravel()
  y = hdu2.data.ravel() 

  xyrange = [0.0, 30], [0.0, 130]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{S III}]\ \lambda 9069 / [\mathrm{S II}] 6731$',
      ylabel=r'$[\mathrm{O III}]\ \lambda 5007 / [\mathrm{O II}]\ \lambda 7318$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-o3o2-s3s2-linear-hist2d-muse.pdf]]

**** Other way up: [O II]/[O III] vs [S II]/[S III]
#+BEGIN_SRC python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.colors import PowerNorm
  from astropy.io import fits
  import seaborn as sns
  sns.set_style('whitegrid')
  sns.set_context('talk')
  sns.set_color_codes()

  figfile = 'bpt-o2o3-s2s3-linear-hist2d-muse.pdf'
  sns.set_palette("Purples_r")
  fig, ax = plt.subplots(1, 1)

  hdu1 = fits.open('../Ratios-for-Alba/ratio-9069-6731.fits')[0]
  hdu2 = fits.open('../Ratios-for-Alba/ratio-5007-7318.fits')[0]
  x = 1./hdu1.data.ravel()
  y = 1./hdu2.data.ravel() 

  xyrange = [0.0, 0.65], [0.0, 0.12]
  ax.hist2d(x, y, bins=[300, 300], range=xyrange, norm=PowerNorm(0.5), cmap='viridis')
  ax.grid(alpha=0.3)

  ax.set(
      xlabel=r'$[\mathrm{S II}] 6731 / [\mathrm{S III}]\ \lambda 9069$',
      ylabel=r'$[\mathrm{O II}]\ \lambda 7318 / [\mathrm{O III}]\ \lambda 5007$',
  )

  fig.set_size_inches(6, 6)
  fig.tight_layout()
  fig.savefig(figfile)
#+END_SRC

#+RESULTS:
[[file:bpt-o2o3-s2s3-linear-hist2d-muse.pdf]]

